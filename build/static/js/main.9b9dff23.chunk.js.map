{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/Container/Container.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","operations","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getIsFetchingCurrentUser","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","Container","children","className","Navigation","useSelector","to","exact","activeClassName","AuthNav","useStyles","makeStyles","theme","button","margin","spacing","UserMenu","dispatch","useDispatch","avatar","defaultAvatar","classes","src","alt","width","Button","variant","color","startIcon","onClick","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","fallback","path","items","createReducer","fetchContacts","addContact","deleteContact","filter","id","loading","changeFilter","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction","number","contact","delete"],"mappings":"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","file":"static/js/main.9b9dff23.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n\tset(token) {\n\t\taxios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\t},\n\tunset() {\n\t\taxios.defaults.headers.common.Authorization = '';\n\t}\n}\n\nconst register = createAsyncThunk('auth/register', async (credentials, { rejectWithValue }) => {\n\ttry {\n\t\tconst { data } = await axios.post('/users/signup', credentials);\n\t\ttoken.set(data.token);\n\t\treturn data;\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\n\ttry {\n\t\tconst { data } = await axios.post('/users/login', credentials);\n\t\ttoken.set(data.token);\n\t\treturn data;\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst logOut = createAsyncThunk('auth/logout', async (_, { rejectWithValue }) => {\n\ttry {\n\t\tawait axios.post('/users/logout');\n\t\ttoken.unset();\n\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n\tconst state = thunkAPI.getState();\n\tconst persistedToken = state.auth.token;\n\n\tif (persistedToken === null) {\n\t\treturn thunkAPI.rejectWithValue();\n\t};\n\n\ttoken.set(persistedToken);\n\ttry {\n\t\tconst { data } = await axios.get('/users/current');\n\t\treturn data;\n\t} catch (error) {\n\t\treturn thunkAPI.rejectWithValue();\n\t}\n});\n\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrentUser,\n};\n\nexport default authSelectors;","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from 'redux/auth';\nimport './Navigation.scss';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n  <nav className=\"navigation\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"link home\"\n      activeClassName=\"active-link\"\n    >\n      Home\n    </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className=\"link\"\n          activeClassName=\"active-link\"\n        >\n          Contacts\n        </NavLink>\n        )}\n  </nav>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './AuthNav.scss';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className=\"link registration\"\n        activeClassName=\"active-link\"\n      >\n        Registration\n      </NavLink>\n      \n      <NavLink\n        to=\"/login\"\n        exact\n        className=\"link\"\n        activeClassName=\"active-link\"\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\nimport './UserMenu.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n  const classes = useStyles();\n\n  return (\n    <div className=\"user-menu-container\">\n      <img src={avatar} alt=\"\" width=\"32\" className=\"avatar\" />\n      <span className=\"name\">Welcome, {name}</span>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        startIcon={<ExitToAppIcon />}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </Button>\n      {/* <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Log out\n      </button> */}\n    </div>\n  );\n}","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { authSelectors } from 'redux/auth';\nimport './AppBar.scss';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  \n  return (\n    <header className=\"header\">\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children }\n    </Route>\n  );\n}","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Container from 'components/Container';\nimport AppBar from 'components/AppBar';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport './App.scss';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>Showing React Skeleton</h1>\n      ) : (\n        <>\n          <AppBar />\n        \n          <Switch>\n            <Suspense fallback={<p>Loading...</p>}>\n              <PublicRoute path=\"/\" exact>\n                <HomePage />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsPage />\n              </PrivateRoute>\n\n              <PublicRoute path=\"/register\" restricted>\n                <RegisterPage />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" restricted>\n                <LoginPage />\n              </PublicRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, {payload}) => payload,  \n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport {store, persistor} from './redux/store';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// export const addContactRequest = createAction('contacts/addContactRequest');\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\n// export const addContactError = createAction('contacts/addContactError');\n\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n// export const deleteContactError = createAction('contacts/deleteContactError');","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n    name,\n    number,\n    };\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n"],"sourceRoot":""}