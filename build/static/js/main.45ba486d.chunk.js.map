{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js"],"names":["Container","children","className","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","exact","activeClassName","AuthNav","useStyles","makeStyles","theme","button","margin","blue","color","backgroundColor","UserMenu","dispatch","useDispatch","name","getUsername","classes","Avatar","Button","variant","endIcon","onClick","authOperations","logOut","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","isFetchingCurrentUser","getIsFetchingCurrentUser","useEffect","fetchCurrentUser","fallback","path","items","createReducer","fetchContacts","fulfilled","_","payload","addContact","state","deleteContact","filter","id","loading","pending","rejected","changeFilter","error","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","operations","thunkAPI","getState","persistedToken","get","user","authSlice","createSlice","initialState","email","extraReducers","createAction","number","contact","delete"],"mappings":"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","file":"static/js/main.45ba486d.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from 'redux/auth';\nimport './Navigation.scss';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n  <nav className=\"navigation\">\n    <NavLink\n      to=\"/\"\n      exact\n      className=\"link home\"\n      activeClassName=\"active-link\"\n    >\n      Home\n    </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className=\"link\"\n          activeClassName=\"active-link\"\n        >\n          Contacts\n        </NavLink>\n        )}\n  </nav>\n  );\n}\n\nexport default Navigation;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './AuthNav.scss';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className=\"link registration\"\n        activeClassName=\"active-link\"\n      >\n        Registration\n      </NavLink>\n      \n      <NavLink\n        to=\"/login\"\n        exact\n        className=\"link\"\n        activeClassName=\"active-link\"\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Avatar from '@material-ui/core/Avatar';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport './UserMenu.scss';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: \"0\",\n  },\n  blue: {\n    color: \"#000000\",\n    backgroundColor: \"#ff8000\",\n  },\n}));\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const classes = useStyles();\n\n  return (\n    <div className=\"user-menu-container\">\n      <Avatar className={classes.blue}>\n        <FaceIcon />\n      </Avatar>\n      <div className=\"welcome\">\n        <span className=\"name\">Welcome,</span>\n        <span className=\"name\">{name}!</span>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        endIcon={<ExitToAppIcon />}\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Log out\n      </Button>\n    </div>\n  );\n}\n\n\n\n/* <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Log out\n      </button> */","import { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { authSelectors } from 'redux/auth';\nimport './AppBar.scss';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  \n  return (\n    <header className=\"header\">\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children }\n    </Route>\n  );\n}","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Container from 'components/Container';\nimport AppBar from 'components/AppBar';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport './App.scss';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>Showing React Skeleton</h1>\n      ) : (\n        <>\n          <AppBar />\n        \n          <Switch>\n            <Suspense fallback={<p>Loading...</p>}>\n              <PublicRoute path=\"/\" exact>\n                <HomePage />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsPage />\n              </PrivateRoute>\n\n              <PublicRoute path=\"/register\" restricted>\n                <RegisterPage />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" restricted>\n                <LoginPage />\n              </PublicRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, {payload}) => payload,  \n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport {store, persistor} from './redux/store';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n\tset(token) {\n\t\taxios.defaults.headers.common.Authorization = `Bearer ${token}`;\n\t},\n\tunset() {\n\t\taxios.defaults.headers.common.Authorization = '';\n\t}\n}\n\nconst register = createAsyncThunk('auth/register', async (credentials, { rejectWithValue }) => {\n\ttry {\n\t\tconst { data } = await axios.post('/users/signup', credentials);\n\t\ttoken.set(data.token);\n\t\treturn data;\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\n\ttry {\n\t\tconst { data } = await axios.post('/users/login', credentials);\n\t\ttoken.set(data.token);\n\t\treturn data;\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst logOut = createAsyncThunk('auth/logout', async (_, { rejectWithValue }) => {\n\ttry {\n\t\tawait axios.post('/users/logout');\n\t\ttoken.unset();\n\n\t} catch (error) {\n\t\treturn rejectWithValue(error);\n\t}\n});\n\nconst fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n\tconst state = thunkAPI.getState();\n\tconst persistedToken = state.auth.token;\n\n\tif (persistedToken === null) {\n\t\treturn thunkAPI.rejectWithValue();\n\t};\n\n\ttoken.set(persistedToken);\n\ttry {\n\t\tconst { data } = await axios.get('/users/current');\n\t\treturn data;\n\t} catch (error) {\n\t\treturn thunkAPI.rejectWithValue();\n\t}\n});\n\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrentUser,\n};\n\nexport default authSelectors;","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\n// export const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// export const addContactRequest = createAction('contacts/addContactRequest');\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\n// export const addContactError = createAction('contacts/addContactError');\n\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n// export const deleteContactError = createAction('contacts/deleteContactError');","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    const contact = {\n    name,\n    number,\n    };\n    try {\n      const { data } = await axios.post('/contacts', contact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n"],"sourceRoot":""}